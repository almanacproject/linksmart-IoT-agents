package eu.ebbits.pwal.impl.driver.opcxmlda.stub;

public class GetProperties extends PropertiesADBBeanImplementation {

	public static final javax.xml.namespace.QName MY_QNAME = new javax.xml.namespace.QName(
			"http://opcfoundation.org/webservices/XMLDA/1.0/",
			"GetProperties",
			"ns1");

	private static final String NAME = GetProperties.class.getSimpleName();
	
	protected String getClassName() {
		return this.getClass().getSimpleName();
	}
	
	/**
	 * field for ItemIDs
	 * This was an Array!
	 */


	protected ItemIdentifier[] localItemIDs ;

	/*  This tracker boolean wil be used to detect whether the user called the set method
	 *   for this attribute. It will be used to determine whether to include this field
	 *   in the serialized XML
	 */
	protected boolean localItemIDsTracker = false ;


	/**
	 * Auto generated getter method
	 * @return ItemIdentifier[]
	 */
	public  ItemIdentifier[] getItemIDs() {
		return localItemIDs;
	}






	/**
	 * validate the array for ItemIDs
	 */
	protected void validateItemIDs(ItemIdentifier[] param) {

	}


	/**
	 * Auto generated setter method
	 * @param param ItemIDs
	 */
	public void setItemIDs(ItemIdentifier[] param) {
		ItemIdentifier[] itemIDsToUse = param.clone();
		
		validateItemIDs(itemIDsToUse);


		if (itemIDsToUse != null) {
			//update the setting tracker
			localItemIDsTracker = true;
		} else {
			localItemIDsTracker = false;

		}

		this.localItemIDs=itemIDsToUse;
	}



	/**
	 * Auto generated add method for the array for convenience
	 * @param param ItemIdentifier
	 */
	public void addItemIDs(ItemIdentifier param) {
		if (localItemIDs == null) {
			localItemIDs = new ItemIdentifier[]{};
		}


		//update the setting tracker
		localItemIDsTracker = true;


		java.util.List list =
				org.apache.axis2.databinding.utils.ConverterUtil.toList(localItemIDs);
		list.add(param);
		this.localItemIDs =
				(ItemIdentifier[])list.toArray(
						new ItemIdentifier[list.size()]);

	}


	


	/**
	 * Auto generated getter method
	 * @return javax.xml.namespace.QName[]
	 */
	public  javax.xml.namespace.QName[] getPropertyNames() {
		return localPropertyNames;
	}






	/**
	 * validate the array for PropertyNames
	 */
	protected void validatePropertyNames(javax.xml.namespace.QName[] param) {

	}


	/**
	 * Auto generated setter method
	 * @param param PropertyNames
	 */
	public void setPropertyNames(javax.xml.namespace.QName[] param) {
		javax.xml.namespace.QName[] propertyNamesToUse = param.clone();
		
		validatePropertyNames(propertyNamesToUse);


		if (propertyNamesToUse != null) {
			//update the setting tracker
			localPropertyNamesTracker = true;
		} else {
			localPropertyNamesTracker = false;

		}

		this.localPropertyNames=propertyNamesToUse;
	}



	/**
	 * field for ReturnAllProperties
	 * This was an Attribute!
	 */


	protected boolean localReturnAllProperties ;


	/**
	 * Auto generated getter method
	 * @return boolean
	 */
	public  boolean getReturnAllProperties() {
		return localReturnAllProperties;
	}



	/**
	 * Auto generated setter method
	 * @param param ReturnAllProperties
	 */
	public void setReturnAllProperties(boolean param) {

		this.localReturnAllProperties=param;


	}


	/**
	 * field for ReturnPropertyValues
	 * This was an Attribute!
	 */


	protected boolean localReturnPropertyValues ;


	/**
	 * Auto generated getter method
	 * @return boolean
	 */
	public  boolean getReturnPropertyValues() {
		return localReturnPropertyValues;
	}



	/**
	 * Auto generated setter method
	 * @param param ReturnPropertyValues
	 */
	public void setReturnPropertyValues(boolean param) {

		this.localReturnPropertyValues=param;


	}


	/**
	 * field for ReturnErrorText
	 * This was an Attribute!
	 */


	protected boolean localReturnErrorText ;


	/**
	 * Auto generated getter method
	 * @return boolean
	 */
	public  boolean getReturnErrorText() {
		return localReturnErrorText;
	}



	/**
	 * Auto generated setter method
	 * @param param ReturnErrorText
	 */
	public void setReturnErrorText(boolean param) {

		this.localReturnErrorText=param;


	}


	/**
	 *
	 * @param parentQName
	 * @param factory
	 * @return org.apache.axiom.om.OMElement
	 */
	public org.apache.axiom.om.OMElement getOMElement (
			final javax.xml.namespace.QName parentQName,
			final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{



		org.apache.axiom.om.OMDataSource dataSource =
				new org.apache.axis2.databinding.ADBDataSource(this,MY_QNAME) {

			public void serialize(org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
				GetProperties.this.serialize(MY_QNAME,factory,xmlWriter);
			}
		};
		return new org.apache.axiom.om.impl.llom.OMSourcedElementImpl(
				MY_QNAME,factory,dataSource);

	}

	protected void writeAttributes(org.apache.axiom.om.OMFactory factory,org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter, String prefix, String namespace) 
			throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
		if (localLocaleID != null) {
			writeAttribute("",
					"LocaleID",
					org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localLocaleID), xmlWriter);
		}
		if (localClientRequestHandle != null) {
			writeAttribute("",
					"ClientRequestHandle",
					org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localClientRequestHandle), xmlWriter);
		}
		if (localItemPath != null) {
			writeAttribute("",
					"ItemPath",
					org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localItemPath), xmlWriter);
		}
		writeAttribute("",
				"ReturnAllProperties",
				org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localReturnAllProperties), xmlWriter);
		writeAttribute("",
				"ReturnPropertyValues",
				org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localReturnPropertyValues), xmlWriter);
		writeAttribute("",
				"ReturnErrorText",
				org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localReturnErrorText), xmlWriter);
		if (localItemIDsTracker) {
			if (localItemIDs!=null) {
				for (int i = 0;i < localItemIDs.length;i++) {
					if (localItemIDs[i] != null) {
						localItemIDs[i].serialize(new javax.xml.namespace.QName("http://opcfoundation.org/webservices/XMLDA/1.0/","ItemIDs"),
								factory,xmlWriter);
					} else {
						// we don't have to do any thing since minOccures is zero
					}
				}
			} else {
				throw new org.apache.axis2.databinding.ADBException("ItemIDs cannot be null!!");
			}
		} if (localPropertyNamesTracker) {
			if (localPropertyNames!=null) {
				namespace = "http://opcfoundation.org/webservices/XMLDA/1.0/";
				boolean emptyNamespace = namespace == null || namespace.length() == 0;
				prefix =  emptyNamespace ? null : xmlWriter.getPrefix(namespace);
				for (int i = 0;i < localPropertyNames.length;i++) {
					if (localPropertyNames[i] != null) {
						if (!emptyNamespace) {
							if (prefix == null) {
								String prefix2 = generatePrefix(namespace);
								xmlWriter.writeStartElement(prefix2,"PropertyNames", namespace);
								xmlWriter.writeNamespace(prefix2, namespace);
								xmlWriter.setPrefix(prefix2, namespace);
							} else {
								xmlWriter.writeStartElement(namespace,"PropertyNames");
							}
						} else {
							xmlWriter.writeStartElement("PropertyNames");
						}
						xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localPropertyNames[i]));
						xmlWriter.writeEndElement();
					} else {
						// we have to do nothing since minOccurs is zero
					}
				}
			} else {
				throw new org.apache.axis2.databinding.ADBException("PropertyNames cannot be null!!");
			}
		}
		xmlWriter.writeEndElement();
	}


	/**
	 * databinding method to get an XML representation of this object
	 *
	 */
	public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
			throws org.apache.axis2.databinding.ADBException{



		java.util.ArrayList elementList = new java.util.ArrayList();
		java.util.ArrayList attribList = new java.util.ArrayList();

		if (localItemIDsTracker) {
			if (localItemIDs!=null) {
				for (int i = 0;i < localItemIDs.length;i++) {

					if (localItemIDs[i] != null) {
						elementList.add(new javax.xml.namespace.QName("http://opcfoundation.org/webservices/XMLDA/1.0/",
								"ItemIDs"));
						elementList.add(localItemIDs[i]);
					} else {

						// nothing to do

					}

				}
			} else {

				throw new org.apache.axis2.databinding.ADBException("ItemIDs cannot be null!!");

			}

		} if (localPropertyNamesTracker) {
			if (localPropertyNames!=null) {
				for (int i = 0;i < localPropertyNames.length;i++) {

					if (localPropertyNames[i] != null) {
						elementList.add(new javax.xml.namespace.QName("http://opcfoundation.org/webservices/XMLDA/1.0/",
								"PropertyNames"));
						elementList.add(
								org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localPropertyNames[i]));
					} else {

						// have to do nothing

					}


				}
			} else {

				throw new org.apache.axis2.databinding.ADBException("PropertyNames cannot be null!!");

			}

		}
		attribList.add(
				new javax.xml.namespace.QName("","LocaleID"));

		attribList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localLocaleID));

		attribList.add(
				new javax.xml.namespace.QName("","ClientRequestHandle"));

		attribList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localClientRequestHandle));

		attribList.add(
				new javax.xml.namespace.QName("","ItemPath"));

		attribList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localItemPath));

		attribList.add(
				new javax.xml.namespace.QName("","ReturnAllProperties"));

		attribList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localReturnAllProperties));

		attribList.add(
				new javax.xml.namespace.QName("","ReturnPropertyValues"));

		attribList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localReturnPropertyValues));

		attribList.add(
				new javax.xml.namespace.QName("","ReturnErrorText"));

		attribList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localReturnErrorText));


		return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());



	}



	/**
	 *  Factory class that keeps the parse method
	 */
	public static class Factory extends GenericFactory {

		/**
		 * static method to create the object
		 * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
		 *			 If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
		 * Postcondition: If this object is an element, the reader is positioned at its end element
		 *			 If this object is a complex type, the reader is positioned at the end element of its outer element
		 */
		public static GetProperties parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
			GetProperties object =
					new GetProperties();

			try {

				while (!reader.isStartElement() && !reader.isEndElement())
					reader.next();

				GetProperties result = (GetProperties) checkADBBeanType(NAME,reader); 
				if(result!=null) {
					return result;
				}

				// Note all attributes that were handled. Used to differ normal attributes
				// from anyAttributes.
				java.util.Vector <String> handledAttributes = new java.util.Vector <String>();

				// handle attribute "LocaleID"
				handleLocaleID(reader.getAttributeValue(null,"LocaleID"), object, handledAttributes);
				
				// handle attribute "ClientRequestHandle"
				handleClientRequestHandle(reader.getAttributeValue(null,"ClientRequestHandle"), object, handledAttributes);

				// handle attribute "ItemPath"
				handleItemPath(reader.getAttributeValue(null,"ItemPath"), object, handledAttributes);

				// handle attribute "ReturnAllProperties"
				handleReturnAllProperties(reader.getAttributeValue(null,"ReturnAllProperties"), object, handledAttributes);
				
				// handle attribute "ReturnPropertyValues"
				handleReturnPropertyValues(reader.getAttributeValue(null,"ReturnPropertyValues"), object, handledAttributes);

				// handle attribute "ReturnErrorText"
				handleReturnErrorText(reader.getAttributeValue(null,"ReturnErrorText"), object, handledAttributes);

				reader.next();

				java.util.ArrayList list1 = new java.util.ArrayList();

				java.util.ArrayList list2 = new java.util.ArrayList();


				while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

				if (reader.isStartElement() && new javax.xml.namespace.QName("http://opcfoundation.org/webservices/XMLDA/1.0/","ItemIDs").equals(reader.getName())) {



					// Process the array and step past its final element's end.
					list1.add(ItemIdentifier.Factory.parse(reader));

					//loop until we find a start element that is not part of this array
					boolean loopDone1 = false;
					while(!loopDone1) {
						// We should be at the end element, but make sure
						while (!reader.isEndElement())
							reader.next();
						// Step out of this element
						reader.next();
						// Step to next element event.
						while (!reader.isStartElement() && !reader.isEndElement())
							reader.next();
						if (reader.isEndElement()) {
							//two continuous end elements means we are exiting the xml structure
							loopDone1 = true;
						} else {
							if (new javax.xml.namespace.QName("http://opcfoundation.org/webservices/XMLDA/1.0/","ItemIDs").equals(reader.getName())) {
								list1.add(ItemIdentifier.Factory.parse(reader));

							}else{
								loopDone1 = true;
							}
						}
					}
					// call the converter utility  to convert and set the array

					object.setItemIDs((ItemIdentifier[])
							org.apache.axis2.databinding.utils.ConverterUtil.convertToArray(
									ItemIdentifier.class,
									list1));

				}  // End of if for expected property start element

				else {

				}


				while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

				if (reader.isStartElement() && new javax.xml.namespace.QName("http://opcfoundation.org/webservices/XMLDA/1.0/","PropertyNames").equals(reader.getName())) {



					// Process the array and step past its final element's end.
					list2.add(reader.getElementText());

					//loop until we find a start element that is not part of this array
					boolean loopDone2 = false;
					while(!loopDone2) {
						// Ensure we are at the EndElement
						while (!reader.isEndElement()) {
							reader.next();
						}
						// Step out of this element
						reader.next();
						// Step to next element event.
						while (!reader.isStartElement() && !reader.isEndElement())
							reader.next();
						if (reader.isEndElement()) {
							//two continuous end elements means we are exiting the xml structure
							loopDone2 = true;
						} else {
							if (new javax.xml.namespace.QName("http://opcfoundation.org/webservices/XMLDA/1.0/","PropertyNames").equals(reader.getName())) {
								list2.add(reader.getElementText());

							}else{
								loopDone2 = true;
							}
						}
					}
					// call the converter utility  to convert and set the array

					object.setPropertyNames((javax.xml.namespace.QName[])
							org.apache.axis2.databinding.utils.ConverterUtil.convertToArray(
									javax.xml.namespace.QName.class,list2));

				}  // End of if for expected property start element

				else {

				}

				while (!reader.isStartElement() && !reader.isEndElement())
					reader.next();

				if (reader.isStartElement())
					// A start element we are not expecting indicates a trailing invalid property
					throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getLocalName());




			} catch (javax.xml.stream.XMLStreamException e) {
				throw new java.lang.Exception(e);
			}

			return object;
		}
	}//end of factory class
}
