package eu.ebbits.pwal.impl.driver.opcxmlda.stub;

public class ExtensionMapper {

	public static java.lang.Object getTypeObject(java.lang.String namespaceURI,
			java.lang.String typeName,
			javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{


		if (
				"http://opcfoundation.org/webservices/XMLDA/1.0/".equals(namespaceURI) &&
				"interfaceVersion".equals(typeName)) {

			return  InterfaceVersion.Factory.parse(reader);


		}


		if (
				"http://opcfoundation.org/webservices/XMLDA/1.0/".equals(namespaceURI) &&
				"SubscribeRequestItemList".equals(typeName)) {

			return  SubscribeRequestItemList.Factory.parse(reader);


		}


		if (
				"http://opcfoundation.org/webservices/XMLDA/1.0/".equals(namespaceURI) &&
				"SubscribeItemValue".equals(typeName)) {

			return  SubscribeItemValue.Factory.parse(reader);


		}


		if (
				"http://opcfoundation.org/webservices/XMLDA/1.0/".equals(namespaceURI) &&
				"BrowseElement".equals(typeName)) {

			return  BrowseElement.Factory.parse(reader);


		}


		if (
				"http://opcfoundation.org/webservices/XMLDA/1.0/".equals(namespaceURI) &&
				"SubscribeReplyItemList".equals(typeName)) {

			return  SubscribeReplyItemList.Factory.parse(reader);


		}


		if (
				"http://opcfoundation.org/webservices/XMLDA/1.0/".equals(namespaceURI) &&
				"ReadRequestItem".equals(typeName)) {

			return  ReadRequestItem.Factory.parse(reader);


		}


		if (
				"http://opcfoundation.org/webservices/XMLDA/1.0/".equals(namespaceURI) &&
				"OPCQuality".equals(typeName)) {

			return  OPCQuality.Factory.parse(reader);


		}


		if (
				"http://opcfoundation.org/webservices/XMLDA/1.0/".equals(namespaceURI) &&
				"browseFilter".equals(typeName)) {

			return  BrowseFilter.Factory.parse(reader);


		}


		if (
				"http://opcfoundation.org/webservices/XMLDA/1.0/".equals(namespaceURI) &&
				"ReplyBase".equals(typeName)) {

			return  ReplyBase.Factory.parse(reader);


		}


		if (
				"http://opcfoundation.org/webservices/XMLDA/1.0/".equals(namespaceURI) &&
				"ReplyItemList".equals(typeName)) {

			return  ReplyItemList.Factory.parse(reader);


		}


		if (
				"http://opcfoundation.org/webservices/XMLDA/1.0/".equals(namespaceURI) &&
				"OPCError".equals(typeName)) {

			return  OPCError.Factory.parse(reader);


		}


		if (
				"http://opcfoundation.org/webservices/XMLDA/1.0/".equals(namespaceURI) &&
				"SubscribeRequestItem".equals(typeName)) {

			return  SubscribeRequestItem.Factory.parse(reader);


		}


		if (
				"http://opcfoundation.org/webservices/XMLDA/1.0/".equals(namespaceURI) &&
				"PropertyReplyList".equals(typeName)) {

			return  PropertyReplyList.Factory.parse(reader);


		}


		if (
				"http://opcfoundation.org/webservices/XMLDA/1.0/".equals(namespaceURI) &&
				"qualityBits".equals(typeName)) {

			return  QualityBits.Factory.parse(reader);


		}


		if (
				"http://opcfoundation.org/webservices/XMLDA/1.0/".equals(namespaceURI) &&
				"ItemProperty".equals(typeName)) {

			return  ItemProperty.Factory.parse(reader);


		}


		if (
				"http://opcfoundation.org/webservices/XMLDA/1.0/".equals(namespaceURI) &&
				"ItemIdentifier".equals(typeName)) {

			return  ItemIdentifier.Factory.parse(reader);


		}


		if (
				"http://opcfoundation.org/webservices/XMLDA/1.0/".equals(namespaceURI) &&
				"ServerStatus".equals(typeName)) {

			return  ServerStatus.Factory.parse(reader);


		}


		if (
				"http://opcfoundation.org/webservices/XMLDA/1.0/".equals(namespaceURI) &&
				"RequestOptions".equals(typeName)) {

			return  RequestOptions.Factory.parse(reader);


		}


		if (
				"http://opcfoundation.org/webservices/XMLDA/1.0/".equals(namespaceURI) &&
				"limitBits".equals(typeName)) {

			return  LimitBits.Factory.parse(reader);


		}


		if (
				"http://opcfoundation.org/webservices/XMLDA/1.0/".equals(namespaceURI) &&
				"serverState".equals(typeName)) {

			return  ServerState.Factory.parse(reader);


		}


		if (
				"http://opcfoundation.org/webservices/XMLDA/1.0/".equals(namespaceURI) &&
				"ItemValue".equals(typeName)) {

			return  ItemValue.Factory.parse(reader);


		}


		if (
				"http://opcfoundation.org/webservices/XMLDA/1.0/".equals(namespaceURI) &&
				"SubscribePolledRefreshReplyItemList".equals(typeName)) {

			return  SubscribePolledRefreshReplyItemList.Factory.parse(reader);


		}


		if (
				"http://opcfoundation.org/webservices/XMLDA/1.0/".equals(namespaceURI) &&
				"ReadRequestItemList".equals(typeName)) {

			return  ReadRequestItemList.Factory.parse(reader);


		}


		if (
				"http://opcfoundation.org/webservices/XMLDA/1.0/".equals(namespaceURI) &&
				"WriteRequestItemList".equals(typeName)) {

			return  WriteRequestItemList.Factory.parse(reader);


		}


		throw new org.apache.axis2.databinding.ADBException("Unsupported type " + namespaceURI + " " + typeName);
	}
}
