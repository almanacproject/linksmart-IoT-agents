package eu.ebbits.pwal.impl.driver.opcxmlda.stub;

import javax.xml.namespace.QName;

public class Browse extends PropertiesItemADBBeanImplementation {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;

	private static final String NAME = Browse.class.getSimpleName();
	
	protected String getClassName() {
		return this.getClass().getSimpleName();
	}
	
	public static final javax.xml.namespace.QName MY_QNAME = new javax.xml.namespace.QName(
			"http://opcfoundation.org/webservices/XMLDA/1.0/",
			"Browse",
			"ns1");


	/**
	 * Auto generated getter method
	 * @return javax.xml.namespace.QName[]
	 */
	public  javax.xml.namespace.QName[] getPropertyNames() {
		return localPropertyNames;
	}

	/**
	 * validate the array for PropertyNames
	 */
	protected void validatePropertyNames(javax.xml.namespace.QName[] param) {
	}


	/**
	 * Auto generated setter method
	 * @param param PropertyNames
	 */
	public void setPropertyNames(javax.xml.namespace.QName[] param) {
		javax.xml.namespace.QName[] namesToUse = param.clone();
		
		validatePropertyNames(namesToUse);

		if (namesToUse != null) {
			//update the setting tracker
			localPropertyNamesTracker = true;
		} else {
			localPropertyNamesTracker = false;

		}

		this.localPropertyNames=namesToUse;
	}



	/**
	 * field for ContinuationPoint
	 * This was an Attribute!
	 */


	protected String localContinuationPoint ;


	/**
	 * Auto generated getter method
	 * @return String
	 */
	public  String getContinuationPoint() {
		return localContinuationPoint;
	}



	/**
	 * Auto generated setter method
	 * @param param ContinuationPoint
	 */
	public void setContinuationPoint(String param) {

		this.localContinuationPoint=param;


	}


	/**
	 * field for MaxElementsReturned
	 * This was an Attribute!
	 */


	protected int localMaxElementsReturned ;


	/**
	 * Auto generated getter method
	 * @return int
	 */
	public  int getMaxElementsReturned() {
		return localMaxElementsReturned;
	}



	/**
	 * Auto generated setter method
	 * @param param MaxElementsReturned
	 */
	public void setMaxElementsReturned(int param) {

		this.localMaxElementsReturned=param;


	}


	/**
	 * field for BrowseFilter
	 * This was an Attribute!
	 */


	protected BrowseFilter localBrowseFilter ;


	/**
	 * Auto generated getter method
	 * @return BrowseFilter
	 */
	public  BrowseFilter getBrowseFilter() {
		return localBrowseFilter;
	}



	/**
	 * Auto generated setter method
	 * @param param BrowseFilter
	 */
	public void setBrowseFilter(BrowseFilter param) {

		this.localBrowseFilter=param;


	}


	/**
	 * field for ElementNameFilter
	 * This was an Attribute!
	 */


	protected String localElementNameFilter ;


	/**
	 * Auto generated getter method
	 * @return String
	 */
	public  String getElementNameFilter() {
		return localElementNameFilter;
	}



	/**
	 * Auto generated setter method
	 * @param param ElementNameFilter
	 */
	public void setElementNameFilter(String param) {

		this.localElementNameFilter=param;


	}


	/**
	 * field for VendorFilter
	 * This was an Attribute!
	 */


	protected String localVendorFilter ;


	/**
	 * Auto generated getter method
	 * @return String
	 */
	public  String getVendorFilter() {
		return localVendorFilter;
	}



	/**
	 * Auto generated setter method
	 * @param param VendorFilter
	 */
	public void setVendorFilter(String param) {

		this.localVendorFilter=param;


	}


	/**
	 * field for ReturnAllProperties
	 * This was an Attribute!
	 */


	protected boolean localReturnAllProperties ;


	/**
	 * Auto generated getter method
	 * @return boolean
	 */
	public  boolean getReturnAllProperties() {
		return localReturnAllProperties;
	}



	/**
	 * Auto generated setter method
	 * @param param ReturnAllProperties
	 */
	public void setReturnAllProperties(boolean param) {

		this.localReturnAllProperties=param;


	}


	/**
	 * field for ReturnPropertyValues
	 * This was an Attribute!
	 */


	protected boolean localReturnPropertyValues ;


	/**
	 * Auto generated getter method
	 * @return boolean
	 */
	public  boolean getReturnPropertyValues() {
		return localReturnPropertyValues;
	}



	/**
	 * Auto generated setter method
	 * @param param ReturnPropertyValues
	 */
	public void setReturnPropertyValues(boolean param) {

		this.localReturnPropertyValues=param;


	}


	/**
	 * field for ReturnErrorText
	 * This was an Attribute!
	 */


	protected boolean localReturnErrorText ;


	/**
	 * Auto generated getter method
	 * @return boolean
	 */
	public  boolean getReturnErrorText() {
		return localReturnErrorText;
	}



	/**
	 * Auto generated setter method
	 * @param param ReturnErrorText
	 */
	public void setReturnErrorText(boolean param) {

		this.localReturnErrorText=param;


	}



	/**
	 *
	 * @param parentQName
	 * @param factory
	 * @return org.apache.axiom.om.OMElement
	 */
	public org.apache.axiom.om.OMElement getOMElement (
			final javax.xml.namespace.QName parentQName,
			final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{



		org.apache.axiom.om.OMDataSource dataSource =
				new org.apache.axis2.databinding.ADBDataSource(this,MY_QNAME) {

			public void serialize(org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
				Browse.this.serialize(MY_QNAME,factory,xmlWriter);
			}
		};
		return new org.apache.axiom.om.impl.llom.OMSourcedElementImpl(
				MY_QNAME,factory,dataSource);

	}


	protected void writeAttributes(org.apache.axiom.om.OMFactory factory,org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter, String prefix, String namespace) 
			throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
		if (localLocaleID != null) {
			writeAttribute("",
					"LocaleID",
					org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localLocaleID), xmlWriter);
		}
		if (localClientRequestHandle != null) {
			writeAttribute("",
					"ClientRequestHandle",
					org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localClientRequestHandle), xmlWriter);
		}
		if (localItemPath != null) {
			writeAttribute("",
					"ItemPath",
					org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localItemPath), xmlWriter);
		}
		if (localItemName != null) {
			writeAttribute("",
					"ItemName",
					org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localItemName), xmlWriter);
		}
		if (localContinuationPoint != null) {
			writeAttribute("",
					"ContinuationPoint",
					org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localContinuationPoint), xmlWriter);
		}
		if (localMaxElementsReturned!=java.lang.Integer.MIN_VALUE) {
			writeAttribute("",
					"MaxElementsReturned",
					org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localMaxElementsReturned), xmlWriter);
		}
		else {
			throw new org.apache.axis2.databinding.ADBException("required attribute localMaxElementsReturned is null");
		}
		if (localBrowseFilter != null) {
			writeAttribute("",
					"BrowseFilter",
					localBrowseFilter.toString(), xmlWriter);
		}
		else {
			throw new org.apache.axis2.databinding.ADBException("required attribute localBrowseFilter is null");
		}
		if (localElementNameFilter != null) {
			writeAttribute("",
					"ElementNameFilter",
					org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localElementNameFilter), xmlWriter);
		}
		if (localVendorFilter != null) {
			writeAttribute("",
					"VendorFilter",
					org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localVendorFilter), xmlWriter);
		}
		writeAttribute("",
				"ReturnAllProperties",
				org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localReturnAllProperties), xmlWriter);
		writeAttribute("",
				"ReturnPropertyValues",
				org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localReturnPropertyValues), xmlWriter);
		writeAttribute("",
				"ReturnErrorText",
				org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localReturnErrorText), xmlWriter);
		if (localPropertyNamesTracker) {
			if (localPropertyNames!=null) {
				namespace = "http://opcfoundation.org/webservices/XMLDA/1.0/";
				boolean emptyNamespace = namespace == null || namespace.length() == 0;
				prefix =  emptyNamespace ? null : xmlWriter.getPrefix(namespace);
				for (int i = 0;i < localPropertyNames.length;i++) {
					if (localPropertyNames[i] != null) {
						if (!emptyNamespace) {
							if (prefix == null) {
								String prefix2 = generatePrefix(namespace);
								xmlWriter.writeStartElement(prefix2,"PropertyNames", namespace);
								xmlWriter.writeNamespace(prefix2, namespace);
								xmlWriter.setPrefix(prefix2, namespace);
							} else {
								xmlWriter.writeStartElement(namespace,"PropertyNames");
							}
						} else {
							xmlWriter.writeStartElement("PropertyNames");
						}
						xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localPropertyNames[i]));
						xmlWriter.writeEndElement();
					} else {
						// we have to do nothing since minOccurs is zero
					}
				}
			} else {
				throw new org.apache.axis2.databinding.ADBException("PropertyNames cannot be null!!");
			}
		}
		xmlWriter.writeEndElement();
	}



	/**
	 * databinding method to get an XML representation of this object
	 *
	 */
	public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
			throws org.apache.axis2.databinding.ADBException{



		java.util.ArrayList elementList = new java.util.ArrayList();
		java.util.ArrayList attribList = new java.util.ArrayList();

		if (localPropertyNamesTracker) {
			if (localPropertyNames!=null) {
				for (int i = 0;i < localPropertyNames.length;i++) {

					if (localPropertyNames[i] != null) {
						elementList.add(new javax.xml.namespace.QName("http://opcfoundation.org/webservices/XMLDA/1.0/",
								"PropertyNames"));
						elementList.add(
								org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localPropertyNames[i]));
					} else {

						// have to do nothing

					}


				}
			} else {

				throw new org.apache.axis2.databinding.ADBException("PropertyNames cannot be null!!");

			}

		}
		attribList.add(
				new javax.xml.namespace.QName("","LocaleID"));

		attribList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localLocaleID));

		attribList.add(
				new javax.xml.namespace.QName("","ClientRequestHandle"));

		attribList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localClientRequestHandle));

		attribList.add(
				new javax.xml.namespace.QName("","ItemPath"));

		attribList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localItemPath));

		attribList.add(
				new javax.xml.namespace.QName("","ItemName"));

		attribList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localItemName));

		attribList.add(
				new javax.xml.namespace.QName("","ContinuationPoint"));

		attribList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localContinuationPoint));

		attribList.add(
				new javax.xml.namespace.QName("","MaxElementsReturned"));

		attribList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localMaxElementsReturned));

		attribList.add(
				new javax.xml.namespace.QName("","BrowseFilter"));

		attribList.add(localBrowseFilter.toString());

		attribList.add(
				new javax.xml.namespace.QName("","ElementNameFilter"));

		attribList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localElementNameFilter));

		attribList.add(
				new javax.xml.namespace.QName("","VendorFilter"));

		attribList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localVendorFilter));

		attribList.add(
				new javax.xml.namespace.QName("","ReturnAllProperties"));

		attribList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localReturnAllProperties));

		attribList.add(
				new javax.xml.namespace.QName("","ReturnPropertyValues"));

		attribList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localReturnPropertyValues));

		attribList.add(
				new javax.xml.namespace.QName("","ReturnErrorText"));

		attribList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localReturnErrorText));


		return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());



	}



	/**
	 *  Factory class that keeps the parse method
	 */
	public static class Factory extends GenericFactory{

		/**
		 * static method to create the object
		 * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
		 *			 If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
		 * Postcondition: If this object is an element, the reader is positioned at its end element
		 *			 If this object is a complex type, the reader is positioned at the end element of its outer element
		 */
		public static Browse parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
			Browse object =
					new Browse();
			try {
				while (!reader.isStartElement() && !reader.isEndElement())
					reader.next();

				Browse result = (Browse) checkADBBeanType(NAME,reader); 
				if(result!=null) {
					return result;
				}

				// Note all attributes that were handled. Used to differ normal attributes
				// from anyAttributes.
				java.util.Vector <String> handledAttributes = new java.util.Vector<String>();

				// handle attribute "LocaleID"
				handleLocaleID(reader.getAttributeValue(null,"LocaleID"),object,handledAttributes);

				// handle attribute "ClientRequestHandle"
				handleClientRequestHandle(reader.getAttributeValue(null,"ClientRequestHandle"),object,handledAttributes);

				// handle attribute "ItemPath"
				handleItemPath(reader.getAttributeValue(null,"ItemPath"),object,handledAttributes);

				// handle attribute "ItemName"
				handleItemName(reader.getAttributeValue(null,"ItemName"),object,handledAttributes);

				// handle attribute "ContinuationPoint"
				handleContinuationPoint(reader.getAttributeValue(null,"ContinuationPoint"),object,handledAttributes);

				// handle attribute "MaxElementsReturned"
				handleMaxElementsReturned(reader.getAttributeValue(null,"MaxElementsReturned"),object,handledAttributes);

				// handle attribute "BrowseFilter"
				String tempAttribBrowseFilter = reader.getAttributeValue(null,"BrowseFilter");

				if (tempAttribBrowseFilter!=null) {
					object.setBrowseFilter(
							BrowseFilter.Factory.fromString(reader,tempAttribBrowseFilter));
				} else {
					throw new org.apache.axis2.databinding.ADBException("Required attribute BrowseFilter is missing");
				}
				handledAttributes.add("BrowseFilter");

				// handle attribute "ElementNameFilter"
				String tempAttribElementNameFilter = reader.getAttributeValue(null,"ElementNameFilter");

				if (tempAttribElementNameFilter!=null) {
					object.setElementNameFilter(
							org.apache.axis2.databinding.utils.ConverterUtil.convertToString(tempAttribElementNameFilter));
				}
				handledAttributes.add("ElementNameFilter");

				// handle attribute "VendorFilter"
				String tempAttribVendorFilter = reader.getAttributeValue(null,"VendorFilter");

				if (tempAttribVendorFilter!=null) {
					object.setVendorFilter(
							org.apache.axis2.databinding.utils.ConverterUtil.convertToString(tempAttribVendorFilter));
				}
				handledAttributes.add("VendorFilter");

				// handle attribute "ReturnAllProperties"
				handleReturnAllProperties(reader.getAttributeValue(null,"ReturnAllProperties"),object,handledAttributes);

				// handle attribute "ReturnPropertyValues"
				handleReturnPropertyValues(reader.getAttributeValue(null,"ReturnPropertyValues"),object,handledAttributes);

				// handle attribute "ReturnErrorText"
				handleReturnErrorText(reader.getAttributeValue(null,"ReturnErrorText"),object,handledAttributes);

				reader.next();

				java.util.ArrayList list1 = new java.util.ArrayList();


				while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

				if (reader.isStartElement() && new javax.xml.namespace.QName("http://opcfoundation.org/webservices/XMLDA/1.0/","PropertyNames").equals(reader.getName())) {



					// Process the array and step past its final element's end.
					list1.add(reader.getElementText());

					//loop until we find a start element that is not part of this array
					boolean loopDone1 = false;
					while(!loopDone1) {
						// Ensure we are at the EndElement
						while (!reader.isEndElement()) {
							reader.next();
						}
						// Step out of this element
						reader.next();
						// Step to next element event.
						while (!reader.isStartElement() && !reader.isEndElement())
							reader.next();
						if (reader.isEndElement()) {
							//two continuous end elements means we are exiting the xml structure
							loopDone1 = true;
						} else {
							if (new javax.xml.namespace.QName("http://opcfoundation.org/webservices/XMLDA/1.0/","PropertyNames").equals(reader.getName())) {
								list1.add(reader.getElementText());

							}else{
								loopDone1 = true;
							}
						}
					}
					// call the converter utility  to convert and set the array

					object.setPropertyNames((javax.xml.namespace.QName[])
							org.apache.axis2.databinding.utils.ConverterUtil.convertToArray(
									javax.xml.namespace.QName.class,list1));

				}  // End of if for expected property start element

				else {

				}

				while (!reader.isStartElement() && !reader.isEndElement())
					reader.next();

				if (reader.isStartElement())
					// A start element we are not expecting indicates a trailing invalid property
					throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getLocalName());




			} catch (javax.xml.stream.XMLStreamException e) {
				throw new java.lang.Exception(e);
			}

			return object;
		}

	}//end of factory class
}
