package eu.ebbits.pwal.impl.driver.opcxmlda.stub;

public class Read extends SerializableADBBeanImplementation {

	public static final javax.xml.namespace.QName MY_QNAME = new javax.xml.namespace.QName(
			"http://opcfoundation.org/webservices/XMLDA/1.0/",
			"Read",
			"ns1");

	private static final String NAME = Read.class.getSimpleName();
	
	protected String getClassName() {
		return this.getClass().getSimpleName();
	}
	
	/**
	 * field for Options
	 */


	protected RequestOptions localOptions ;

	/*  This tracker boolean wil be used to detect whether the user called the set method
	 *   for this attribute. It will be used to determine whether to include this field
	 *   in the serialized XML
	 */
	protected boolean localOptionsTracker = false ;


	/**
	 * Auto generated getter method
	 * @return RequestOptions
	 */
	public  RequestOptions getOptions() {
		return localOptions;
	}



	/**
	 * Auto generated setter method
	 * @param param Options
	 */
	public void setOptions(RequestOptions param) {

		if (param != null) {
			//update the setting tracker
			localOptionsTracker = true;
		} else {
			localOptionsTracker = false;

		}

		this.localOptions=param;


	}


	/**
	 * field for ItemList
	 */


	protected ReadRequestItemList localItemList ;

	/*  This tracker boolean wil be used to detect whether the user called the set method
	 *   for this attribute. It will be used to determine whether to include this field
	 *   in the serialized XML
	 */
	protected boolean localItemListTracker = false ;


	/**
	 * Auto generated getter method
	 * @return ReadRequestItemList
	 */
	public  ReadRequestItemList getItemList() {
		return localItemList;
	}



	/**
	 * Auto generated setter method
	 * @param param ItemList
	 */
	public void setItemList(ReadRequestItemList param) {

		if (param != null) {
			//update the setting tracker
			localItemListTracker = true;
		} else {
			localItemListTracker = false;

		}

		this.localItemList=param;


	}


	/**
	 *
	 * @param parentQName
	 * @param factory
	 * @return org.apache.axiom.om.OMElement
	 */
	public org.apache.axiom.om.OMElement getOMElement (
			final javax.xml.namespace.QName parentQName,
			final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{



		org.apache.axiom.om.OMDataSource dataSource =
				new org.apache.axis2.databinding.ADBDataSource(this,MY_QNAME) {

			public void serialize(org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
				Read.this.serialize(MY_QNAME,factory,xmlWriter);
			}
		};
		return new org.apache.axiom.om.impl.llom.OMSourcedElementImpl(
				MY_QNAME,factory,dataSource);

	}

	protected void writeAttributes(org.apache.axiom.om.OMFactory factory,org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter, String prefix, String namespace) 
			throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
		if (localOptionsTracker) {
			if (localOptions==null) {
				throw new org.apache.axis2.databinding.ADBException("Options cannot be null!!");
			}
			localOptions.serialize(new javax.xml.namespace.QName("http://opcfoundation.org/webservices/XMLDA/1.0/","Options"),
					factory,xmlWriter);
		} if (localItemListTracker) {
			if (localItemList==null) {
				throw new org.apache.axis2.databinding.ADBException("ItemList cannot be null!!");
			}
			localItemList.serialize(new javax.xml.namespace.QName("http://opcfoundation.org/webservices/XMLDA/1.0/","ItemList"),
					factory,xmlWriter);
		}
		xmlWriter.writeEndElement();
	}



	/**
	 * databinding method to get an XML representation of this object
	 *
	 */
	public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
			throws org.apache.axis2.databinding.ADBException{



		java.util.ArrayList elementList = new java.util.ArrayList();
		java.util.ArrayList attribList = new java.util.ArrayList();

		if (localOptionsTracker) {
			elementList.add(new javax.xml.namespace.QName("http://opcfoundation.org/webservices/XMLDA/1.0/",
					"Options"));


			if (localOptions==null) {
				throw new org.apache.axis2.databinding.ADBException("Options cannot be null!!");
			}
			elementList.add(localOptions);
		} if (localItemListTracker) {
			elementList.add(new javax.xml.namespace.QName("http://opcfoundation.org/webservices/XMLDA/1.0/",
					"ItemList"));


			if (localItemList==null) {
				throw new org.apache.axis2.databinding.ADBException("ItemList cannot be null!!");
			}
			elementList.add(localItemList);
		}

		return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());



	}



	/**
	 *  Factory class that keeps the parse method
	 */
	public static class Factory{




		/**
		 * static method to create the object
		 * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
		 *			 If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
		 * Postcondition: If this object is an element, the reader is positioned at its end element
		 *			 If this object is a complex type, the reader is positioned at the end element of its outer element
		 */
		public static Read parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
			Read object =
					new Read();

			try {

				while (!reader.isStartElement() && !reader.isEndElement())
					reader.next();

				Read result = (Read) checkADBBeanType(NAME,reader); 
				if(result!=null) {
					return result;
				}

				reader.next();


				while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

				if (reader.isStartElement() && new javax.xml.namespace.QName("http://opcfoundation.org/webservices/XMLDA/1.0/","Options").equals(reader.getName())) {

					object.setOptions(RequestOptions.Factory.parse(reader));

					reader.next();

				}  // End of if for expected property start element

				else {

				}


				while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

				if (reader.isStartElement() && new javax.xml.namespace.QName("http://opcfoundation.org/webservices/XMLDA/1.0/","ItemList").equals(reader.getName())) {

					object.setItemList(ReadRequestItemList.Factory.parse(reader));

					reader.next();

				}  // End of if for expected property start element

				else {

				}

				while (!reader.isStartElement() && !reader.isEndElement())
					reader.next();

				if (reader.isStartElement())
					// A start element we are not expecting indicates a trailing invalid property
					throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getLocalName());




			} catch (javax.xml.stream.XMLStreamException e) {
				throw new java.lang.Exception(e);
			}

			return object;
		}

	}//end of factory class
}
