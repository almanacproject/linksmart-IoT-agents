package eu.ebbits.pwal.impl.driver.opcxmlda.stub;

public class Subscribe extends SerializableADBBeanImplementation {

	public static final javax.xml.namespace.QName MY_QNAME = new javax.xml.namespace.QName(
			"http://opcfoundation.org/webservices/XMLDA/1.0/",
			"Subscribe",
			"ns1");

	private static final String NAME = Subscribe.class.getSimpleName();
	
	protected String getClassName() {
		return this.getClass().getSimpleName();
	}

	/**
	 * field for Options
	 */


	protected RequestOptions localOptions ;

	/*  This tracker boolean wil be used to detect whether the user called the set method
	 *   for this attribute. It will be used to determine whether to include this field
	 *   in the serialized XML
	 */
	protected boolean localOptionsTracker = false ;


	/**
	 * Auto generated getter method
	 * @return RequestOptions
	 */
	public  RequestOptions getOptions() {
		return localOptions;
	}



	/**
	 * Auto generated setter method
	 * @param param Options
	 */
	public void setOptions(RequestOptions param) {

		if (param != null) {
			//update the setting tracker
			localOptionsTracker = true;
		} else {
			localOptionsTracker = false;

		}

		this.localOptions=param;


	}


	/**
	 * field for ItemList
	 */


	protected SubscribeRequestItemList localItemList ;

	/*  This tracker boolean wil be used to detect whether the user called the set method
	 *   for this attribute. It will be used to determine whether to include this field
	 *   in the serialized XML
	 */
	protected boolean localItemListTracker = false ;


	/**
	 * Auto generated getter method
	 * @return SubscribeRequestItemList
	 */
	public  SubscribeRequestItemList getItemList() {
		return localItemList;
	}



	/**
	 * Auto generated setter method
	 * @param param ItemList
	 */
	public void setItemList(SubscribeRequestItemList param) {

		if (param != null) {
			//update the setting tracker
			localItemListTracker = true;
		} else {
			localItemListTracker = false;

		}

		this.localItemList=param;


	}


	/**
	 * field for ReturnValuesOnReply
	 * This was an Attribute!
	 */


	protected boolean localReturnValuesOnReply ;


	/**
	 * Auto generated getter method
	 * @return boolean
	 */
	public  boolean getReturnValuesOnReply() {
		return localReturnValuesOnReply;
	}



	/**
	 * Auto generated setter method
	 * @param param ReturnValuesOnReply
	 */
	public void setReturnValuesOnReply(boolean param) {

		this.localReturnValuesOnReply=param;


	}


	/**
	 * field for SubscriptionPingRate
	 * This was an Attribute!
	 */


	protected int localSubscriptionPingRate ;


	/**
	 * Auto generated getter method
	 * @return int
	 */
	public  int getSubscriptionPingRate() {
		return localSubscriptionPingRate;
	}



	/**
	 * Auto generated setter method
	 * @param param SubscriptionPingRate
	 */
	public void setSubscriptionPingRate(int param) {

		this.localSubscriptionPingRate=param;


	}


	/**
	 *
	 * @param parentQName
	 * @param factory
	 * @return org.apache.axiom.om.OMElement
	 */
	public org.apache.axiom.om.OMElement getOMElement (
			final javax.xml.namespace.QName parentQName,
			final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{



		org.apache.axiom.om.OMDataSource dataSource =
				new org.apache.axis2.databinding.ADBDataSource(this,MY_QNAME) {

			public void serialize(org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
				Subscribe.this.serialize(MY_QNAME,factory,xmlWriter);
			}
		};
		return new org.apache.axiom.om.impl.llom.OMSourcedElementImpl(
				MY_QNAME,factory,dataSource);

	}


	protected void writeAttributes(org.apache.axiom.om.OMFactory factory,org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter, String prefix, String namespace) 
			throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
		writeAttribute("",
				"ReturnValuesOnReply",
				org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localReturnValuesOnReply), xmlWriter);
		if (localSubscriptionPingRate!=java.lang.Integer.MIN_VALUE) {
			writeAttribute("",
					"SubscriptionPingRate",
					org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSubscriptionPingRate), xmlWriter);
		}
		else {
			throw new org.apache.axis2.databinding.ADBException("required attribute localSubscriptionPingRate is null");
		}
		if (localOptionsTracker) {
			if (localOptions==null) {
				throw new org.apache.axis2.databinding.ADBException("Options cannot be null!!");
			}
			localOptions.serialize(new javax.xml.namespace.QName("http://opcfoundation.org/webservices/XMLDA/1.0/","Options"),
					factory,xmlWriter);
		} if (localItemListTracker) {
			if (localItemList==null) {
				throw new org.apache.axis2.databinding.ADBException("ItemList cannot be null!!");
			}
			localItemList.serialize(new javax.xml.namespace.QName("http://opcfoundation.org/webservices/XMLDA/1.0/","ItemList"),
					factory,xmlWriter);
		}
		xmlWriter.writeEndElement();
	}


	/**
	 * databinding method to get an XML representation of this object
	 *
	 */
	public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
			throws org.apache.axis2.databinding.ADBException{



		java.util.ArrayList elementList = new java.util.ArrayList();
		java.util.ArrayList attribList = new java.util.ArrayList();

		if (localOptionsTracker) {
			elementList.add(new javax.xml.namespace.QName("http://opcfoundation.org/webservices/XMLDA/1.0/",
					"Options"));


			if (localOptions==null) {
				throw new org.apache.axis2.databinding.ADBException("Options cannot be null!!");
			}
			elementList.add(localOptions);
		} if (localItemListTracker) {
			elementList.add(new javax.xml.namespace.QName("http://opcfoundation.org/webservices/XMLDA/1.0/",
					"ItemList"));


			if (localItemList==null) {
				throw new org.apache.axis2.databinding.ADBException("ItemList cannot be null!!");
			}
			elementList.add(localItemList);
		}
		attribList.add(
				new javax.xml.namespace.QName("","ReturnValuesOnReply"));

		attribList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localReturnValuesOnReply));

		attribList.add(
				new javax.xml.namespace.QName("","SubscriptionPingRate"));

		attribList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSubscriptionPingRate));


		return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());



	}



	/**
	 *  Factory class that keeps the parse method
	 */
	public static class Factory{

		/**
		 * static method to create the object
		 * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
		 *			 If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
		 * Postcondition: If this object is an element, the reader is positioned at its end element
		 *			 If this object is a complex type, the reader is positioned at the end element of its outer element
		 */
		public static Subscribe parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
			Subscribe object =
					new Subscribe();

			try {

				while (!reader.isStartElement() && !reader.isEndElement())
					reader.next();

				Subscribe result = (Subscribe) checkADBBeanType(NAME,reader); 
				if(result!=null) {
					return result;
				}


				// Note all attributes that were handled. Used to differ normal attributes
				// from anyAttributes.
				java.util.Vector<String> handledAttributes = new java.util.Vector<String>();


				// handle attribute "ReturnValuesOnReply"
				String tempAttribReturnValuesOnReply = reader.getAttributeValue(null,"ReturnValuesOnReply");
				if (tempAttribReturnValuesOnReply!=null) {
					object.setReturnValuesOnReply(
							org.apache.axis2.databinding.utils.ConverterUtil.convertToBoolean(tempAttribReturnValuesOnReply));
				} else {
					throw new org.apache.axis2.databinding.ADBException("Required attribute ReturnValuesOnReply is missing");
				}
				handledAttributes.add("ReturnValuesOnReply");

				// handle attribute "SubscriptionPingRate"
				String tempAttribSubscriptionPingRate = reader.getAttributeValue(null,"SubscriptionPingRate");
				if (tempAttribSubscriptionPingRate!=null) {
					object.setSubscriptionPingRate(
							org.apache.axis2.databinding.utils.ConverterUtil.convertToInt(tempAttribSubscriptionPingRate));
				} else {
					throw new org.apache.axis2.databinding.ADBException("Required attribute SubscriptionPingRate is missing");
				}
				handledAttributes.add("SubscriptionPingRate");

				reader.next();


				while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

				if (reader.isStartElement() && new javax.xml.namespace.QName("http://opcfoundation.org/webservices/XMLDA/1.0/","Options").equals(reader.getName())) {

					object.setOptions(RequestOptions.Factory.parse(reader));

					reader.next();

				}  // End of if for expected property start element

				else {

				}


				while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

				if (reader.isStartElement() && new javax.xml.namespace.QName("http://opcfoundation.org/webservices/XMLDA/1.0/","ItemList").equals(reader.getName())) {

					object.setItemList(SubscribeRequestItemList.Factory.parse(reader));

					reader.next();

				}  // End of if for expected property start element

				else {

				}

				while (!reader.isStartElement() && !reader.isEndElement())
					reader.next();

				if (reader.isStartElement())
					// A start element we are not expecting indicates a trailing invalid property
					throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getLocalName());




			} catch (javax.xml.stream.XMLStreamException e) {
				throw new java.lang.Exception(e);
			}

			return object;
		}

	}//end of factory class



}


