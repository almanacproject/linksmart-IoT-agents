package eu.linksmart.resource.service;

import eu.linksmart.resource.ResourceManagementException;

/**
 * Manages the life-cycle of resources according to the common set of <a href=
 * "http://en.wikipedia.org/wiki/Create,_read,_update_and_delete#Database_applications"
 * >CRUD operations</a>.
 * 
 * @author pullmann
 *
 * @param <T>
 *            Type of resources handled by this service.
 */
public interface ResourceManager<T> {

	/**
	 * Stores the supplied resource returning the generated name.
	 * 
	 * @param t
	 *            The resource to store.
	 * @return The resource name generated by corresponding
	 *         {@link ResourceNameGenerator}.
	 * @throws ResourceManagementException
	 *             If the processing and storage of the resource failed.
	 */
	String store(T t) throws ResourceManagementException;

	/**
	 * Stores the supplied resource at provided name eventually replacing an
	 * existing resource.
	 * 
	 * @param t
	 *            The resource to create.
	 * @param name
	 *            The user-defined name of the resource.
	 * @throws ResourceManagementException
	 *             If the processing and storage of the resource failed.
	 */
	void store(T t, String name) throws ResourceManagementException;

	/**
	 * Permanently deletes the specified resource.
	 * 
	 * @param name
	 *            The name of the resource to delete.
	 * @throws ResourceManagementException
	 *             If the specified resource could not be deleted.
	 */
	void delete(String name) throws ResourceManagementException;

	/**
	 * Retrieves the specified resource, or <code>null</code> If the resource
	 * does not exist.
	 * 
	 * @param name
	 * @return
	 */
	T read(String name);

	/**
	 * Tests whether the specified resource exists.
	 * 
	 * @param name
	 * @return <code>true</code> if the specified resource exists,
	 *         <code>false</code> otherwise.
	 * 
	 */
	boolean exists(String name);

}
