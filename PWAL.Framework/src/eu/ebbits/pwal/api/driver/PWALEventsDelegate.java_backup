package eu.ebbits.pwal.api.driver;

import java.util.Collection;

import eu.ebbits.pwal.api.model.PWALEvent;

/**
 * Interface for controlling <code>PWALDriver</code>'s 
 * <code>EventsDelegate</code>.
 * <p> 
 * Copyright (c) 2010-2013 the ebbits project. All Rights Reserved.
 *
 * @author     ISMB
 * @version    %I%, %G%
 * @see         PWALDelegate
 * @see         eu.ebbits.pwal.impl.driver.framework.EventsDelegate
 * @since      PWAL 0.1.0
 */
public interface PWALEventsDelegate extends PWALDelegate {
    
    /** 
    * Retrieves the <code>PWALEvent</code>, if available, given its name.
    *
    * @param name - a <code>String</code> with the event's name to get
    * 
    * @return        the <code>PWALEvent</code> if available,
    *                 <code>null</code> otherwise
    *  
    * @see            eu.ebbits.pwal.api.model.PWALEvent
    * @since        PWAL 0.1.0
    */
    PWALEvent getPWALEvent(String name);
    
    /** 
    * Retrieves a collection of <code>PWALEvents</code>s, if available, 
    * given their names.
    *
    * @param names    - a <code>String</code> collection with the events names to
    *                 get
    * 
    * @return        the collection of available <code>PWALEvent</code>s or
    *                 <code>null</code> values where the given name does not exist
    *  
    * @see            eu.ebbits.pwal.api.model.PWALEvent
    * @since        PWAL 0.1.0
    */
    Collection<PWALEvent> getPWALEvents(Collection<String> names);
    
    /** 
    * Retrieves the size of the current <code>PWALEvent</code>s collection.
    *
    * @return        the number of available <code>PWALEvent</code>s
    *  
    * @since        PWAL 0.1.0
    */
    int getPWALEventsCollectionSize();
    
    /** 
    * Retrieves the all available <code>PWALEvent</code>s.
    *
    * @return        the collection of available <code>PWALEvent</code>s or
    *                 <code>null</code> if the collection is empty
    *                 <!-- TODO check if the latter is true --> 
    *  
    * @see            eu.ebbits.pwal.api.model.PWALEvent
    * @since        PWAL 0.1.0
    */
    Collection<PWALEvent> getPWALEventsCollection();
    
    /** 
    * Browses the physical world and updates the current list of available 
    * <code>PWALEvent</code>s, adding new discovered physical world events
    * and removing those not reachable any longer.
    *
    * @since        PWAL 0.1.0
    */
    void updatePWALEventsCollection();

}
