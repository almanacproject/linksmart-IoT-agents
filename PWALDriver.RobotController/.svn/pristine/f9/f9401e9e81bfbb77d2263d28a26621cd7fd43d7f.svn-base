package eu.ebbits.pwal.impl.driver.robotcontroller;

import java.io.IOException;
import java.net.SocketException;
import java.net.UnknownHostException;

import org.osgi.service.component.ComponentContext;

import eu.ebbits.pwal.api.annotations.PWALServiceAnnotation;
import eu.ebbits.pwal.api.model.PWALValue;
import eu.ebbits.pwal.impl.driver.PWALServicesDelegateImpl;


/**
 * <code>RobotControllerDriver</code> services delegate.
 * <p> 
 * Copyright (c) 2010-2013 the ebbits project. All Rights Reserved.
 *
 * @author	ISMB
 * @version	%I%, %G%
 * @since	M36demo 1.0
 */
public class RobotControllerServicesDelegate extends PWALServicesDelegateImpl {
	
	private boolean[] robotAvailableAxis;
	private String robotName;
	private String robotType;

	public RobotControllerServicesDelegate(RobotControllerDriverImpl driver) {
		super(driver);
	}

	@Override
	public void init(ComponentContext context) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void run() {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void updatePWALServicesCollection() {
		// TODO Auto-generated method stub
		
	}

	@PWALServiceAnnotation (exposed = true)
	synchronized public PWALValue getRobotAxisParameter(int axisId, int paramId) {
		try {
			String response = ((RobotControllerDriverImpl) this.driver).client.
					sendRobotControllerCommand("Ax" + axisId + "_" + paramId);
			return new PWALValue(Double.valueOf(response.split("=")[3].trim()));
		} catch (SocketException e) {
			// TODO Auto-generated catch block
		} catch (UnknownHostException e) {
			// TODO Auto-generated catch block
		} catch (IOException e) {
			// TODO Auto-generated catch block
		}
		return null;
	}
	
	@PWALServiceAnnotation (exposed = true)
	synchronized public boolean[] getRobotAvailableAxis() {
		// FIXME: Implement this
		return this.robotAvailableAxis;
	}
	
	@PWALServiceAnnotation (exposed = true)
	synchronized public String getRobotName() {
		// FIXME: Implement this
		return this.robotName;
	}
	
	@PWALServiceAnnotation (exposed = true)
	synchronized public String getRobotType() {
		// FIXME: Implement this
		return this.robotType;
	}
	
	@PWALServiceAnnotation (exposed = true)
	synchronized public boolean isRobotAxisAvailable(int axisId) {
		// FIXME: Implement this
		return this.robotAvailableAxis[axisId];
	}
}
